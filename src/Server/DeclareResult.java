/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Server;

import db.CommonFunction;
import java.awt.Color;
import java.awt.Container;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik
 */
public class DeclareResult extends javax.swing.JFrame {

    /** Creates new form DeclareResult */
    public void readData() throws Exception
    {
        ResultSet rst=cf.getResultset("course");
        jComboBox2.removeAllItems();
        jComboBox2.addItem("All");
        while(rst.next())
        {
            jComboBox2.addItem(rst.getString("cname"));
        }
    }
     public void readData1(String course) throws Exception
    {
        System.out.println("Read Course is"+course);
                jComboBox1.removeAllItems();

        jComboBox1.addItem("All");
        if(course.equalsIgnoreCase("All"))
        {
            System.out.println("All");
            
            ResultSet rst=cf.getResultset("subject");
            
            while(rst.next())
            {
                jComboBox1.addItem(rst.getString("sname"));
            }
//            jComboBox1.addItem("");
        }
        else{
        ResultSet rst=cf.getResultset("subject where cid='"+course+"'");
        while(rst.next())
        {
            jComboBox1.addItem(rst.getString("sname"));
        }
        }
    }
    CommonFunction cf=new CommonFunction();
    public DeclareResult() {
        initComponents();
        try{
             Container ctx=getContentPane();
             ctx.setBackground(new Color(150,255,255));
            //ResultSet rs=cf.getResultset("studentresult");
            readData();
            String query="select * from studentresult";
            ResultSet rs=cf.getResult(query);
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            while(rs.next())
            {
                if(rs.getString("res_state").equals("To be Declared"))
                model.addRow(new Object[]{true,rs.getInt("sid"),rs.getInt("eid"),rs.getString("stu_name"),rs.getString("cname"),rs.getString("sname"),rs.getInt("totalq"),rs.getInt("attques"),rs.getInt("obtmarks"),rs.getString("result"),rs.getString("res_state")});
            }
            
        }catch(Exception ee)
        {
            System.out.println("Exception is"+ee);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Student ID", "Exam ID", "Student Name", "Course Name", "Subject Name", "Total Questions", "Attempted Questions", "Obtained Marks", "Result", "ResultState"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(18);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        jLabel1.setText("Course Name");

        jLabel2.setText("Subject Name");

        jButton1.setText("Get Results");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jButton2.setText("DECLARE ALL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DECLARE SELECTED");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(172, 172, 172)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(130, 130, 130)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(1, 1, 1)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try{
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            int rowidx=jTable1.getSelectedRow();
            int eid=Integer.parseInt(model.getValueAt(rowidx, 1).toString());
            //            DeclareExams frm=new DeclareExams(eid);
            //            frm.setVisible(true);

        }catch(Exception ee)
        {
            System.out.println("Get Attempted Exam Table Error"+ee);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            
            String course=jComboBox2.getSelectedItem().toString();
            String subject=jComboBox1.getSelectedItem().toString();
            System.out.println("Course "+course+ " and Subject "+subject);
            String query="select * from studentresult";
            if(course.equals("All") && subject!="All")
            {
                query=query+" where sname='"+subject+"'";
            }
            else if(course.equals("All") && subject.equals("All"))
            {
                query=query;
            }
            else if(course!="All" && subject!="All")
            {
                System.out.println("Both are Selected");
                query=query+" where cname='"+course+"' and sname='"+subject+"'";
            }
            else
            {
                
            }
            ResultSet rst=cf.getResult(query);
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            while(model.getRowCount()>0)
            {
                model.removeRow(model.getRowCount()-1);
            }
            while(rst.next())
            {
                if(rst.getString("res_state").equals("To be Declared"))
                model.addRow(new Object[]{true,rst.getInt("sid"),rst.getInt("eid"),rst.getString("stu_name"),rst.getString("cname"),rst.getString("sname"),rst.getInt("totalq"),rst.getInt("attques"),rst.getInt("obtmarks"),rst.getString("result"),rst.getString("res_state")});
            }
            
        }catch(Exception ee)
        {
            System.out.println("Button Exception "+ee);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    Connection cnn;
    PreparedStatement psmt2;
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        cnn=db.MyConnection.getConnection();
        
            
        
       
        try{
            int row=0,count=0;
            psmt2=cnn.prepareStatement("update studentresult set res_state=? where sid=? and eid=?");
            count=model.getRowCount();
            while(count>0)
            {
                if(model.getValueAt(row,0).equals(true))
                {
                    psmt2.setInt(2, Integer.parseInt(model.getValueAt(row,1).toString()));
                    psmt2.setInt(3,Integer.parseInt(model.getValueAt(row,2).toString()));
                    psmt2.setString(1,"Declared"); 
                    int r=psmt2.executeUpdate();
                    if(r>0)
                    {
                        System.out.println("Record Updated");
                        model.removeRow(row+1);
                        ++row;
                    }
                    else{
                        ++row;
                    }
                    
                    
                }
                --count;
                
            }
            
        }catch(Exception ee)
        {
            System.out.println("Declare Selected Error"+ee);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        cnn=db.MyConnection.getConnection();
        
            
        
       
        try{
            
            
            int row1=0,count=0;
            while(row1<model.getRowCount())
            {
                model.setValueAt(true,row1,0);
                ++row1;
            }
            int row=0;
            psmt2=cnn.prepareStatement("update studentresult set res_state=? where sid=? and eid=?");
            count=model.getRowCount();
            int count1=0;
            row=count-1;
            while(count>0)
            {
                System.out.println("Model Row is"+count);
                System.out.println("Loop"+row);
                if(model.getValueAt(row,0).equals(true))
                    
                {
                   
                    System.out.println("Loop"+row);
                    psmt2.setInt(2, Integer.parseInt(model.getValueAt(row,1).toString()));
                    psmt2.setInt(3,Integer.parseInt(model.getValueAt(row,2).toString()));
                    psmt2.setString(1,"Declared"); 
                    int r=psmt2.executeUpdate();
                    System.out.println("times execute"+r);
                    System.out.println("ResultSet "+r);
//                     while(r>0)
//                     {
                         model.removeRow(row);
//                         --r;
                         --row;
                         --count;
                         //--count;
//                     }
                        //++row;
                        //return;
//                    if(r>0)
//                    {
//                            System.out.println("Record Updated");
//                        model.removeRow(row);
//                        
//                        ++row;
//                        return;
//                    }
//                    else{
//                        ++row;
//                        return;
//                        
//                    }
                   
                    
                }
//                else
//                {
//                   System.out.println("Else");
//                }
//            ++count1;
//               ++row;
            }
            
//            while(count>0)
//            {
//                if(model.getValueAt(row,0).equals(true))
//                {
//                    psmt2.setInt(2, Integer.parseInt(model.getValueAt(row,1).toString()));
//                    psmt2.setInt(3,Integer.parseInt(model.getValueAt(row,2).toString()));
//                    psmt2.setString(1,"Declared"); 
//                    int r=psmt2.executeUpdate();
//                    if(r>0)
//                    {
//                        System.out.println("Record Updated");
//                        model.removeRow(count-1);
//                        ++row;
//                    }
//                    else{
//                        ++row;
//                    }
//                    
//                    
//                }
//                --count;
//                
//            }
//row=model.getRowCount();
 ResultSet rst=cf.getResultset("studentresult where res_state='To be Declared'");
// while(rs.next()==false)
// {
//     model.removeRow(row);
//     ++row;
// }
// if(rst.next())
// {
//     
// }else{
//     System.out.println("No Record");
//     System.out.println("Model Row "+model.getRowCount());
//    
//     while(row>0)
//     {
//          System.out.println("ROW COUNT "+row);
//     model.removeRow(row-1);
//     --row;
//     }
// }
        }catch(Exception ee)
        {
            System.out.println("Declare All Error"+ee);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
       try{
//        if(jComboBox2.getSelectedIndex()==0)
//       {
//           return;
//       }
//       else{
           String cname=jComboBox2.getSelectedItem().toString();
       
       
          
           readData1(cname);
//        }
       }catch(Exception ee)
       {
           System.out.println("Course Name Changed Error "+ee);
       }
       
       
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeclareResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeclareResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeclareResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeclareResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeclareResult().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
