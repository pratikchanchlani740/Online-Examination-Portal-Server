/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Server;

import db.CommonFunction;
import java.awt.Color;
import java.awt.Container;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik
 */
public final class QuestionList extends javax.swing.JFrame {
  public void readData1(String cname) throws Exception
          
  {   
     
//      String sql="where sid="+sname1;
     // System.out.println("Query is"+query);
//     ResultSet rst=cf.getResultset("subject where cid='"+cname+"'");
//   //  rs.first();
//       DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
////         if(JOptionPane.showConfirmDialog(this,"Do you Surely Want To Delete The Record ?")==JOptionPane.OK_OPTION)
////         {
//         while(model.getRowCount()>0)
//         {
//             
//             model.removeRow(model.getRowCount()-1);
//             }
//         if(rst.next())
//         {
//             do{
//         
//                model.addRow(new String[]{cname,rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),rst.getString(5),rst.getString(6),rst.getString(7),rst.getString(8),"Edit","Delete"});
//          
//          }while(rs.next());
//         }
//         if(rs==null)
//             return;
        ResultSet rst1=cf.getResultset("subject where cid='"+cname+"'"); 
        sname.removeAllItems();
      while(rst1.next())
        {
        sname.addItem(rst1.getString("sname"));
          //rs.first();
        }
            
        
  }
  public void readData2(String sname) throws Exception
  {
      String cname1=cname.getSelectedItem().toString();
      DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
      while(model.getRowCount()>0)
      {
          model.removeRow(model.getRowCount()-1);
      }
   ResultSet rst=cf.getResultset("question where sid='"+sname+"'");
     while(rst.next())
     {
          model.addRow(new String[]{cname1,rst.getString(1),rst.getString(2),rst.getString(3),rst.getString(4),rst.getString(5),rst.getString(6),rst.getString(7),rst.getString(8),"Edit","Delete"});   
     }
  }
    public void readData() throws Exception
  {
      ResultSet rs=cf.getResultset("course");
      
      cname.removeAllItems();
      while(rs.next())
      {
          System.out.println("HEllooooo");
            cname.addItem(rs.getString(2));
      }
  }
    /**
     * Creates new form QuestionList
     */
    public ResultSet rs;
    PreparedStatement psmt1,psmt2;
    CommonFunction cf=new CommonFunction();
//   QuestionForm frm=new QuestionForm();
    public QuestionList() {
        initComponents();
        try{
//            this.frm=frm;
        Connection cnn=db.MyConnection.getConnection();
        psmt2=cnn.prepareStatement("delete from question where qno=?");
        //rs=cf.getResultset(" question");
         Container ctx=getContentPane();
             ctx.setBackground(new Color(150,255,255));
       readData();
       String query=" question";
       readData1(query);
        
       //  setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);   
        }
        catch(Exception ee)
        {
            System.out.println("QUESLIST EXCEPTION"+ee);
        }
    }
    public ResultSet getResult()throws Exception
    {
        Connection cnn=db.MyConnection.getConnection();
        
        
        Statement smt=cnn.createStatement(ResultSet.CONCUR_UPDATABLE,ResultSet.TYPE_SCROLL_SENSITIVE);
         String sname1=sname.getSelectedItem().toString();
         
        return smt.executeQuery("select * from question where sid='"+sname1+"'");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cname = new javax.swing.JComboBox<>();
        sname = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cnameItemStateChanged(evt);
            }
        });
        cname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnameActionPerformed(evt);
            }
        });

        sname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                snameItemStateChanged(evt);
            }
        });
        sname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snameActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course", "Subject", "QNo", "Question", "Option1", "Option2", "Option3", "Option4", "Answer", "Edit", "Delete"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Show All Records");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(cname, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addComponent(sname, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(56, 56, 56))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnameActionPerformed
       
    }//GEN-LAST:event_cnameActionPerformed

    private void snameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_snameItemStateChanged

        
        if(sname.getSelectedIndex()==-1)
        {
            try{
             //   String sname1=;
            readData1("question where sid=' '");
            }catch(Exception ee)
            {
                
            }
            return;
        }
        else{
        String sname1=sname.getSelectedItem().toString();
       System.out.println(""+sname1);
       //rs=cf.getResultset("subject");
       try{
      
       readData2(sname1);
          
         
       
        
       }catch(Exception ee)
       {
           System.out.println("SUBJECT CHANGED EXCEPTION"+ee);
       }
        }
    }//GEN-LAST:event_snameItemStateChanged

    private void cnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cnameItemStateChanged
        //sname.removeAllItems();  
        String cname1=cname.getSelectedItem().toString();
        //ResultSet rst=cf.getResult("select distinct(cid),sid,sname from subject where cid='"+cname1+"'");
    // sname.removeAllItems();
   //  ResultSet rst=cf.getResult("select * from subject inner join question where cid='"+cname1+"'");
    
       try{
           readData1(cname1);
         
//           while(rst.next())
//           {     
//               
////               if(rst.getString("cid").equals(cname1))
////                  {
//                 System.out.println("ResultSet is"+rst.getString(3));
//                   sname.addItem(rst.getString(3));
////       }
//                  
//           }
           
          // sname.setSelectedIndex(0);
           
//    readData1("question where sid='"+sname1+"'");
           
       
        
       }catch(Exception ee)
       {
           System.out.println("Error "+ee);
       }
        
         
        
       
    }//GEN-LAST:event_cnameItemStateChanged

    private void snameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snameActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try{
     
 
        int columnidx= jTable1.getSelectedColumn();
 
        System.out.println(""+columnidx);
 
       int rowindex=jTable1.getSelectedRow();
      
       if(columnidx==9)
       {
          DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
           int id=Integer.parseInt(model.getValueAt(rowindex, 2)+"");
           //String cid=model.getValueAt(rowindex,0).toString();
                System.out.println("ID "+id); 
                 if(JOptionPane.showConfirmDialog(this,"Surely Want to Edit ?")==JOptionPane.OK_OPTION)
                 {
          QuestionForm frm=new QuestionForm(id);
          frm.setVisible(true);
         //dispose();
                 }
                 else{
                     
                 }
          //frm.jButton1.setText("Edit");
         // frm.show();
//          psmt2.setInt(1,id);
//          frm.setVisible(true);
//         frm.cid.setSelectedItem(model.getValueAt(rowindex, 0)+"");
//         frm.sid.setSelectedItem(model.getValueAt(rowindex, 1)+"");
//          frm.qno.setText(model.getValueAt(rowindex, 2)+"");
//         frm.ques.setText(model.getValueAt(rowindex, 3)+"");
//          frm.op1.setText(model.getValueAt(rowindex, 4)+"");
//         frm.op2.setText(model.getValueAt(rowindex,5)+"");
//           frm.op3.setText(model.getValueAt(rowindex, 6)+"");
//         frm.op4.setText(model.getValueAt(rowindex,7)+"");
         
             //int count=psmt2.executeUpdate();
            
            //System.out.println("Count Is "+count);
           
           //readData();
        
           
           
            
           
           
           
       }
       if(columnidx==10)
       {
          DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
           int id=Integer.parseInt(model.getValueAt(rowindex, 2)+"");
           int rowidx=jTable1.getSelectedRow();
                System.out.println("ID "+id);   
          
          psmt2.setInt(1,id);
          if(JOptionPane.showConfirmDialog(this,"Surely You Want To Delete ?")==JOptionPane.OK_OPTION)
          {
             int count=psmt2.executeUpdate();
            
            System.out.println("Count Is "+count);
            model.removeRow(rowidx);
           //readData();
          }
          else{
              
          }
              
        // addRow(S);
       }
       
       
 }
 catch(Exception ee)
 {
   System.out.println("Exception "+ee);  
 }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
        ResultSet rst=cf.getResultset("question inner join subject where subject.sname=question.sid");
        DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
         while(model.getRowCount()>0)
      {
          model.removeRow(model.getRowCount()-1);
      }
         
     while(rst.next())
     {  
         //String sname1=rst.getString("sid");
        // ResultSet=cf.getResultset
        model.addRow(new String[]{rst.getString("cid"),rst.getString("question.sid"),rst.getString("qno"),rst.getString("ques"),rst.getString("op1"),rst.getString("op2"),rst.getString("op3"),rst.getString("op4"),rst.getString("ans"),"Edit","Delete"}); 
     }
        }catch(Exception ee)
        {
            System.out.println("Exception is"+ee);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
//public void change() throws Exception
//{
//    rs.next();
//}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuestionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuestionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuestionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuestionList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuestionList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> cname;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> sname;
    // End of variables declaration//GEN-END:variables
}
