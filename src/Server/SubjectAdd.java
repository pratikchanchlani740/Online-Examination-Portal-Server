/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Server;

import db.CommonFunction;
import java.awt.Color;
import java.awt.Container;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFrame;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik
 */
public class SubjectAdd extends javax.swing.JFrame {
    public ResultSet rs;
    PreparedStatement psmt1,psmt2;
    CommonFunction cf=new CommonFunction();
   Connection cnn;
        public void readData1() throws Exception
        {
//             Statement smt=cnn.createStatement();
//             rs=smt.executeQuery("select * from subject");
            rs=cf.getResultset("subject");
          DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
//         if(JOptionPane.showConfirmDialog(this,"Do you Surely Want To Delete The Record ?")==JOptionPane.OK_OPTION)
//         {
         while(model.getRowCount()>0)
         {
             
             model.removeRow(model.getRowCount()-1);
             }
            
             
//         }
//          else{
//              
//          }
         
       
        if(rs.next())
        {
          do{
               
         
                model.addRow(new String[]{cid.getText(),rs.getString(2),rs.getString(3),"Edit","Delete"});
                int sid1=rs.getInt("sid");
                ++sid1;
                sid.setText(""+sid1);
                sname.setText("");
          
          }while(rs.next());
          
        }
        }
    public void readData() throws Exception
    {    ResultSet rs1=cf.getResult("select distinct(cname) from course");
        while(rs1.next())
        {
        cname.addItem(rs1.getString(1));
        }
    }
    /**
     * Creates new form SubjectAdd
     */
   
    public SubjectAdd() {
        initComponents();
       try{
            Container ctx=getContentPane();
             ctx.setBackground(new Color(150,255,255));
            cid.setVisible(false);
            cnn=db.MyConnection.getConnection();
            psmt1=cnn.prepareStatement("insert into subject values(?,?,?)");
             psmt2=cnn.prepareStatement("delete from subject where sid=?");
            
           //rs=cf.getResultset("course");
           //rs=cf.getResultset("subject");
             //readData();
             //rs=getResult();
             
             rs=cf.getResultset("course");
              readData();
            rs=cf.getResultset("subject");
             setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//             while(rs.next())
//             {
//                 cid.addItem(rs.getString(2));
//             }
//             
             if(rs.next())
        {  
            rs=cf.getResultset("subject");
            int sid1=cf.getMaxId("select max(sid) from subject");
            
            sid1++;
            sid.setText(sid1+"");
          //  cid.setEditable(false);
            readData1();
        }
        else{
            JOptionPane.showMessageDialog(null,"No Record");
            sid.setText("1");
        }
            //readData();
            
           
        }catch(Exception ee)
        {
            
        }
        
    }
 public ResultSet getResult()throws Exception
    {
        Connection cnn=db.MyConnection.getConnection();
        
        
        Statement smt=cnn.createStatement(ResultSet.CONCUR_UPDATABLE,ResultSet.TYPE_SCROLL_SENSITIVE);
        
        return smt.executeQuery("select * from course inner join subject where course.cname=subject.cid");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sid = new javax.swing.JTextField();
        sname = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cname = new javax.swing.JComboBox<>();
        cid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Subject Id");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Subject Name");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Course Id");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Subject ID", "Subject Name", "EDIT", "DELETE"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        cname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cnameItemStateChanged(evt);
            }
        });
        cname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(sid, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cname, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cid, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(cname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(cid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jButton1)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      try{
           
           psmt1.setString(1,cname.getSelectedItem().toString());
           psmt1.setString(2,sid.getText());
           psmt1.setString(3,sname.getText());
           
           int count=psmt1.executeUpdate();
          // rs=cf.getResultset("subject");
           System.out.println("Count is"+count); 
           readData1();
           //clearData();
           
           
       }catch(Exception ee)
       {
             System.out.println("Exception is"+ee);
               }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      
           try{
     
 
        int columnidx= jTable1.getSelectedColumn();
 
 System.out.println(""+columnidx);
 
       int rowindex=jTable1.getSelectedRow();
       rowidx=rowindex;
       if(columnidx==3)
       {
          DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
           int id=Integer.parseInt(model.getValueAt(rowindex, 1)+"");
           
                System.out.println("ID "+id);   
          
          psmt2.setInt(1,id);
          
          if(JOptionPane.showConfirmDialog(this,"Surely Want to Edit ?")==JOptionPane.OK_OPTION)
          {
                sid.setText(model.getValueAt(rowindex, 1)+"");
         sname.setText(model.getValueAt(rowindex, 2)+"");
             
             int count=psmt2.executeUpdate();
            
            System.out.println("Count Is "+count);
           
           readData();
          }
           else{
               
           }
         
       }
       if(columnidx==4)
       {
          DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
           int id=Integer.parseInt(model.getValueAt(rowindex, 1)+"");
           
                System.out.println("ID "+id);   
          
          psmt2.setInt(1,id);
          if(JOptionPane.showConfirmDialog(this,"Surely You Want To Delete ?")==JOptionPane.OK_OPTION)
          {
             int count=psmt2.executeUpdate();
            
            System.out.println("Count Is "+count);
           
           readData1();
          }
          else{
              
          }
              
        // addRow(S);
       }
       
       
 }
 catch(Exception ee)
 {
   System.out.println("Exception "+ee);  
 }
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void cnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnameActionPerformed

    private void cnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cnameItemStateChanged
       try{
           rs=cf.getResultset("course");
           int cid1=cf.getId("select cid from course");
           cid.setText(""+cid1);
       }
       catch(Exception ee)
       {
           
       }
    }//GEN-LAST:event_cnameItemStateChanged
int rowidx=0;
    public void deleteRow(Subject Sr)
  {    int rowindex=jTable1.getSelectedRow();
         DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
         model.removeRow(rowindex);
//lst.remove(Stu);
     
  }
    int flag=0;
    public void addRow(Subject Sr)
{
    
    System.out.println("Add row");
    DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
    
    if(flag==0)
    {
        if(lst.isEmpty())
        {
            lst.add(Sr);
           
           System.out.println("Hello");
           
         model.addRow(new Object[]{cname.getSelectedItem().toString(),sid.getText(),sname.getText(),"EDIT","DELETE"});
             jTable1.getColumnModel().getColumn(3).setCellRenderer(new EditDesign());
            jTable1.getColumnModel().getColumn(4).setCellRenderer(new EditDesign1());

        }
        else
          {
              
             for(Subject S:lst)
              {
                  if(S.getSid()==Sr.getSid())
                  {
                      JOptionPane.showMessageDialog(this,"Course ID Already Present");
                      return;
                  }
                  
              }
               
             // lst.clear();
                     // lst.set(tab.getSelectedRow(),Stu);
                // lst.remove(Stu); 
                  
                     lst.add(Sr);
                    
                     // lst.clear();
               
                
             //lst.clear();
            // lst.add(Stu);
              
              jTable1.getColumnModel().getColumn(3).setCellRenderer(new EditDesign());
              jTable1.getColumnModel().getColumn(4).setCellRenderer(new EditDesign1());
             model.addRow(new Object[]{cname.getSelectedItem().toString(),sid.getText(),sname.getText(),"EDIT","DELETE"});
             
              
                   }    
    }
        else if(flag==1)
          {
               
               System.out.println(""+flag);
              lst.add(rowidx,Sr);
              while(model.getRowCount()>0)
              {
                  model.removeRow(model.getRowCount()-1);
                  
              }
              
              for(Subject S1:lst)
              {
               model.addRow(new Object[]{"",S1.getSid(),S1.getSname(),"EDIT","DELETE"});
              }
               rowidx=0;
          }
}
    /**
     * @param args the command line arguments
     */
      ArrayList<Subject> lst=new ArrayList<Subject> (); 
                        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubjectAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubjectAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubjectAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubjectAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubjectAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cid;
    public javax.swing.JComboBox<String> cname;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField sid;
    private javax.swing.JTextField sname;
    // End of variables declaration//GEN-END:variables
}
